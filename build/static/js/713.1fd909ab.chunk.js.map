{"version":3,"file":"static/js/713.1fd909ab.chunk.js","mappings":"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","sources":["components/Admin/activities-edit/activity-edit/EditActivity.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport {DesktopOutlined, LogoutOutlined, DiffOutlined, FormOutlined, UsergroupAddOutlined } from '@ant-design/icons';\r\nimport {Layout, Menu, theme } from 'antd';\r\n\r\nimport './editActivity.css'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {AuthContext} from \"../../../../authentication/authContext\";\r\n\r\nimport image1 from '../../control-panel/images/image1.jpg'\r\n\r\n\r\nconst { Content, Sider } = Layout;\r\n\r\ninterface Activity {\r\n    _id: string;\r\n    name: string;\r\n    location: string;\r\n    country: string;\r\n    date: string;\r\n    text: string;\r\n}\r\n\r\nconst EditActivity: React.FC = () => {\r\n    const auth = useContext(AuthContext), [activityData, setActivityData] = useState({\r\n        _id: '',\r\n        name: '',\r\n        location: '',\r\n        country: '',\r\n        date: '',\r\n        text: '',\r\n    }), [collapsed, setCollapsed] = useState(false), {\r\n        token: {},\r\n    } = theme.useToken(), navigate = useNavigate(), navigateToLogin = () => {\r\n        auth.logout();\r\n        navigate('/Login');\r\n    }, handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = event.target;\r\n        await setActivityData({...activityData, [name]: value});\r\n    }, handleChangeTextArea = async (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const {name, value} = event.target;\r\n        await setActivityData({...activityData, [name]: value});\r\n    }, {activityId} = useParams(), handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const newActivity = {\r\n            name: activityData.name,\r\n            location: activityData.location,\r\n            country: activityData.country,\r\n            date: activityData.date,\r\n            text: activityData.text,\r\n        }\r\n        const response = await axios.patch(process.env.REACT_APP_BACKEND_URL + `/Admin/Control-panel/Activities/Edit/${activityId}`, newActivity, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        alert('AKTIVNOST USPJEŠNO AŽURIRANA!')\r\n        navigate('/Admin/Control-panel/Activities/Select');\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch( process.env.REACT_APP_BACKEND_URL + `/Activities/${activityId}`)\r\n            .then((res) => res.json())\r\n            .then((data) => setActivityData(data as Activity))\r\n    }, [activityId]);\r\n\r\n    useEffect(() => {\r\n        const handleWindowResize = () => {\r\n            if (window.innerWidth < 576) {\r\n                setCollapsed(true);\r\n            } else {\r\n                setCollapsed(false);\r\n            }\r\n        };\r\n        handleWindowResize();\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleWindowResize);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Layout style={{ minHeight: 'max-content'}}>\r\n            <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={['4']} mode=\"inline\">\r\n                    <div style={{ height: 32, margin: 16, background: 'rgba(255, 255, 255, 0.2)' }} />\r\n                    <Menu.Item key={\"1\"} icon={<DesktopOutlined />} onClick={() => navigate('/')}>POČETNA</Menu.Item>\r\n                    <Menu.Item key={\"2\"} icon={<DesktopOutlined />} onClick={() => navigate('/Admin/Control-panel')}>ADMIN PANEL</Menu.Item>\r\n                    <Menu.Item key={\"3\"} icon={<DiffOutlined />} onClick={() => navigate('/Admin/Control-panel/Activities/Add')}>NOVA AKTIVNOST</Menu.Item>\r\n                    <Menu.Item key={\"4\"} icon={<FormOutlined />} onClick={() => navigate('/Admin/Control-panel/Activities/Select')}><b>UREDI AKTIVNOSTI</b></Menu.Item>\r\n                    <Menu.Item key={\"5\"} icon={<DiffOutlined />} onClick={() => navigate('/Admin/Control-panel/Notifications/Add')}>NOVA OBAVIJEST</Menu.Item>\r\n                    <Menu.Item key={\"6\"} icon={<FormOutlined />} onClick={() => navigate('/Admin/Control-panel/Notifications/Select')}>UREDI OBAVIJESTI</Menu.Item>\r\n                    <Menu.Item key={\"7\"} icon={<UsergroupAddOutlined />} onClick={() => navigate('/Admin/Control-panel/Memberships')}>NOVI ČLANOVI</Menu.Item>\r\n                    <Menu.Item key={\"8\"} icon={<LogoutOutlined />} onClick={navigateToLogin}>LOGOUT</Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                <Content style={{ margin: '0 0' }}>\r\n                    <div className={\"editActivity-page-main\"} style={{minHeight: '100vh', backgroundImage:  `linear-gradient(rgba(0,0,0,.8), rgba(0,0,0,.6)), url(${image1})`, backgroundSize: \"cover\", height: 'max-content'}}>\r\n                        <div>\r\n                            {activityData && (\r\n                                <div  key={activityData._id}>\r\n                                    <form onSubmit={handleSubmit} className={\"text-center editActivity-form\"}>\r\n                                        <div className=\"mb-3 editActivity-form1\">\r\n                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">NAZIV AKTIVNOSTI</label>\r\n                                            <input defaultValue={activityData.name} name={'name'} onChange={handleChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                                        </div>\r\n                                        <div className=\"mb-3 editActivity-form1\">\r\n                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">LOKACIJA</label>\r\n                                            <input defaultValue={activityData.location} name={'location'} onChange={handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n                                        </div>\r\n                                        <div className=\"mb-3 editActivity-form1\">\r\n                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">DRŽAVA</label>\r\n                                            <input defaultValue={activityData.country} name={'country'} onChange={handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n                                        </div>\r\n                                        <div className=\"mb-3 editActivity-form1\">\r\n                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">DATUM</label>\r\n                                            <input defaultValue={activityData.date} name={'date'} onChange={handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n                                        </div>\r\n                                        <div className=\"mb-3 editActivity-form1\">\r\n                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">DETALJAN TEKST</label>\r\n                                            <textarea defaultValue={activityData.text} name={'text'} onChange={handleChangeTextArea} className=\"form-control editActivity-form2\" id=\"exampleInputPassword1\"/>\r\n                                        </div>\r\n                                        <div className={\"editActivity-form3\"}>\r\n                                            <button  type=\"submit\" className=\"btn btn-primary form-btn\">AŽURIRAJ</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default EditActivity;"],"names":["Content","Layout","Sider","auth","useContext","AuthContext","useState","_id","name","location","country","date","text","activityData","setActivityData","collapsed","setCollapsed","theme","token","navigate","useNavigate","handleChange","event","target","value","handleChangeTextArea","activityId","useParams","handleSubmit","preventDefault","newActivity","axios","process","headers","alert","useEffect","fetch","then","res","json","data","handleWindowResize","window","innerWidth","addEventListener","removeEventListener","style","minHeight","collapsible","onCollapse","defaultSelectedKeys","mode","height","margin","background","icon","DesktopOutlined","onClick","DiffOutlined","FormOutlined","UsergroupAddOutlined","LogoutOutlined","logout","className","backgroundImage","image1","backgroundSize","onSubmit","htmlFor","defaultValue","onChange","id","type"],"sourceRoot":""}